[
    {
        "id": "e134af0e.019898",
        "type": "tab",
        "label": "Lookup Logic",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e8ab76b0.450f8",
        "type": "mongodb",
        "hostname": "mongodb-performance-figures",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "performance-figures",
        "name": "MongoDB"
    },
    {
        "id": "885de229.3d242",
        "type": "inject",
        "z": "e134af0e.019898",
        "name": "Empty query (find all)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "a1a61d6d.df63"
            ]
        ]
    },
    {
        "id": "a56b099c.0f795",
        "type": "debug",
        "z": "e134af0e.019898",
        "name": "Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 300,
        "wires": []
    },
    {
        "id": "f524098a.a4879",
        "type": "csv",
        "z": "e134af0e.019898",
        "name": "Extract CSV rows to JS objects",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "94fc067c.ae704"
            ]
        ]
    },
    {
        "id": "6ac1cc9.c5ddbb4",
        "type": "inject",
        "z": "e134af0e.019898",
        "name": "Insert DB entries",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "691242c9.ef442c"
            ]
        ]
    },
    {
        "id": "3218e70f.3e277",
        "type": "inject",
        "z": "e134af0e.019898",
        "name": "Clear DB entries",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "a02d84f9.1d34f"
            ]
        ]
    },
    {
        "id": "a02d84f9.1d34f",
        "type": "template",
        "z": "e134af0e.019898",
        "name": "Empty query",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "{}",
        "output": "json",
        "x": 310,
        "y": 360,
        "wires": [
            [
                "5e5dd861.cff128"
            ]
        ]
    },
    {
        "id": "11bfe1b5.7a1fce",
        "type": "template",
        "z": "e134af0e.019898",
        "name": "Example query document",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{ \"architecture\" : \"p8\", \"rperfSMT8\": { \"$gt\" : 200, \"$lt\" : 250 } }",
        "output": "json",
        "x": 310,
        "y": 260,
        "wires": [
            [
                "a1a61d6d.df63"
            ]
        ]
    },
    {
        "id": "b5bbe257.a24a8",
        "type": "inject",
        "z": "e134af0e.019898",
        "name": "Query DB",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "11bfe1b5.7a1fce"
            ]
        ]
    },
    {
        "id": "94fc067c.ae704",
        "type": "mongodb out",
        "z": "e134af0e.019898",
        "mongodb": "e8ab76b0.450f8",
        "name": "Mongo Insert",
        "collection": "performance",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "5e5dd861.cff128",
        "type": "mongodb out",
        "z": "e134af0e.019898",
        "mongodb": "e8ab76b0.450f8",
        "name": "Mongo Delete All",
        "collection": "performance",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 510,
        "y": 360,
        "wires": []
    },
    {
        "id": "a1a61d6d.df63",
        "type": "mongodb in",
        "z": "e134af0e.019898",
        "mongodb": "e8ab76b0.450f8",
        "name": "Mongo Find",
        "collection": "performance",
        "operation": "find",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "a56b099c.0f795",
                "f34a1ac5.3984e8"
            ]
        ]
    },
    {
        "id": "f34a1ac5.3984e8",
        "type": "split",
        "z": "e134af0e.019898",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 730,
        "y": 360,
        "wires": [
            [
                "a6db1265.3d26d"
            ]
        ]
    },
    {
        "id": "a6db1265.3d26d",
        "type": "debug",
        "z": "e134af0e.019898",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 400,
        "wires": []
    },
    {
        "id": "2e54d1b.f4acbae",
        "type": "http in",
        "z": "e134af0e.019898",
        "name": "",
        "url": "/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 480,
        "wires": [
            [
                "7b200d2b.c047dc"
            ]
        ]
    },
    {
        "id": "c18cb7db.2386e",
        "type": "mongodb in",
        "z": "e134af0e.019898",
        "mongodb": "e8ab76b0.450f8",
        "name": "Mongo Find",
        "collection": "performance",
        "operation": "find",
        "x": 410,
        "y": 480,
        "wires": [
            [
                "61dfb210.4e27ec"
            ]
        ]
    },
    {
        "id": "6ef8ff30.ddc02",
        "type": "http response",
        "z": "e134af0e.019898",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 480,
        "wires": []
    },
    {
        "id": "61dfb210.4e27ec",
        "type": "function",
        "z": "e134af0e.019898",
        "name": "",
        "func": "msg.text = \"Servers: <br />\\n\"\nmsg.payload.forEach(unpack);\n\nfunction unpack(item, index) {\n    msg.text += item.modelType + \" with \" + item.totalCores + \" cores<br />\\n\"\n}\nmsg.payload = msg.text;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 480,
        "wires": [
            [
                "6ef8ff30.ddc02"
            ]
        ]
    },
    {
        "id": "7b200d2b.c047dc",
        "type": "function",
        "z": "e134af0e.019898",
        "name": "",
        "func": "if (msg.payload.model) {\n    msg.payload.model = JSON.parse(msg.payload.model)\n}\nif (msg.payload.type) {\n    msg.payload.type = JSON.parse(msg.payload.type)\n}\nif (msg.payload.modelType) {\n    msg.payload.modelType = JSON.parse(msg.payload.modelType)\n}\nif (msg.payload.frequencyGHz) {\n    msg.payload.frequencyGHz = JSON.parse(msg.payload.frequencyGHz)\n}\nif (msg.payload.totalCores) {\n    msg.payload.totalCores = JSON.parse(msg.payload.totalCores)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 480,
        "wires": [
            [
                "c18cb7db.2386e"
            ]
        ]
    },
    {
        "id": "36ffc8d.2ca9438",
        "type": "http in",
        "z": "e134af0e.019898",
        "name": "",
        "url": "/rperf",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 600,
        "wires": [
            [
                "e97836bb.020678"
            ]
        ]
    },
    {
        "id": "bbcacd1.283c2b",
        "type": "mongodb in",
        "z": "e134af0e.019898",
        "mongodb": "e8ab76b0.450f8",
        "name": "Mongo Find",
        "collection": "performance",
        "operation": "find",
        "x": 410,
        "y": 600,
        "wires": [
            [
                "da18d2f3.3ac718"
            ]
        ]
    },
    {
        "id": "da18d2f3.3ac718",
        "type": "http response",
        "z": "e134af0e.019898",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 600,
        "wires": []
    },
    {
        "id": "e97836bb.020678",
        "type": "function",
        "z": "e134af0e.019898",
        "name": "",
        "func": "msg.query={}\n\nif (msg.payload.model) {\n    msg.query.model = JSON.parse(msg.payload.model)\n}\nif (msg.payload.type) {\n    if(isNaN(msg.payload.type)) {\n        msg.query.type = msg.payload.type\n    } else {\n        msg.query.type = JSON.parse(msg.payload.type)\n    }\n}\nif (msg.payload.sockets) {\n    msg.query.sockets = JSON.parse(msg.payload.sockets)\n}\nif (msg.payload.coresPerSocket) {\n    msg.query.coresPerSocket = JSON.parse(msg.payload.coresPerSocket)\n}\nif (msg.payload.modelType) {\n    msg.query.modelType = msg.payload.modelType\n}\nif (msg.payload.architecture) {\n    msg.query.architecture = msg.payload.architecture\n}\nif (msg.payload.frequencyGHz) {\n    msg.query.frequencyGHz = JSON.parse(msg.payload.frequencyGHz)\n}\nif (msg.payload.totalCores) {\n    msg.query.totalCores = JSON.parse(msg.payload.totalCores)\n}\n\nmsg.payload = msg.query\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 600,
        "wires": [
            [
                "bbcacd1.283c2b"
            ]
        ]
    },
    {
        "id": "691242c9.ef442c",
        "type": "file in",
        "z": "e134af0e.019898",
        "name": "",
        "filename": "perf.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "f524098a.a4879"
            ]
        ]
    }
]